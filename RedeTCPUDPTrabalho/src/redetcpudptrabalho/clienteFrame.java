/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package redetcpudptrabalho;

import java.awt.Color;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Usuario
 */
public class clienteFrame extends javax.swing.JFrame {
    File fileBuffer = null;
    JFileChooser fcBuffer = null;
    int portaValor = 5963;
    boolean portaLock = false;
    boolean globalLock = false;
    boolean threadControlLock = false;
    volatile boolean threadInterruptFlag = false;
    boolean usarTCP = true;
    /**
     * Creates new form NovoJFrame
     */
    public clienteFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btSelecionarArquivo = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lbArquivoNome = new javax.swing.JLabel();
        tbBaixar = new javax.swing.JToggleButton();
        pConfig = new javax.swing.JPanel();
        tbTransporte = new javax.swing.JToggleButton();
        tfPorta = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfIP = new javax.swing.JTextField();
        lbInfo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        btSelecionarArquivo.setText("Selecionar Pasta");
        btSelecionarArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSelecionarArquivoActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Arquivo :");

        lbArquivoNome.setText("NULL");
        lbArquivoNome.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(lbArquivoNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbArquivoNome, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                .addGap(31, 31, 31))
        );

        tbBaixar.setBackground(new java.awt.Color(255, 255, 255));
        tbBaixar.setText("Baixar Arquivo");
        tbBaixar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbBaixarActionPerformed(evt);
            }
        });

        tbTransporte.setText("TCP");
        tbTransporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbTransporteActionPerformed(evt);
            }
        });

        tfPorta.setText("5963");
        tfPorta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPortaActionPerformed(evt);
            }
        });
        tfPorta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfPortaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfPortaKeyReleased(evt);
            }
        });

        jLabel3.setText("Porta :");

        jLabel4.setText("IP :");

        tfIP.setText("localhost");
        tfIP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfIPActionPerformed(evt);
            }
        });
        tfIP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfIPKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfIPKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout pConfigLayout = new javax.swing.GroupLayout(pConfig);
        pConfig.setLayout(pConfigLayout);
        pConfigLayout.setHorizontalGroup(
            pConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pConfigLayout.createSequentialGroup()
                .addComponent(tbTransporte, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 167, Short.MAX_VALUE))
            .addGroup(pConfigLayout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(pConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pConfigLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfIP, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pConfigLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfPorta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pConfigLayout.setVerticalGroup(
            pConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pConfigLayout.createSequentialGroup()
                .addComponent(tbTransporte)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfPorta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(9, 9, 9)
                .addGroup(pConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        lbInfo.setText("Nao conectado");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btSelecionarArquivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tbBaixar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pConfig, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btSelecionarArquivo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pConfig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tbBaixar)
                    .addComponent(lbInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void limparGui(){
        lbArquivoNome.setText("NULL");
    }
    
    private void btSelecionarArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSelecionarArquivoActionPerformed
        // TODO add your handling code here:
        this.setVisible(true);

        if (fcBuffer==null)
        {
            fcBuffer = new JFileChooser();
            fcBuffer.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        }
        
        int returnVal = fcBuffer.showOpenDialog(this);
        
        try{
            if (returnVal == JFileChooser.APPROVE_OPTION)
            {
                fileBuffer = fcBuffer.getSelectedFile();
                lbArquivoNome.setText(fileBuffer.getName());
            }
            else
            {
                
            }
        }
        catch( Exception e)
        {
            e.printStackTrace();
        }
        System.out.println("end");
    }//GEN-LAST:event_btSelecionarArquivoActionPerformed

    private void tfPortaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPortaActionPerformed
        // TODO add your handling code here:
        if (portaLock){
            return;
        }
        try{
            portaLock = true;
            int novaPorta = Integer.parseInt(tfPorta.getText());
            portaValor = novaPorta;
        }catch(Exception e){
            tfPorta.setText(Integer.toString(portaValor));
        }finally{
            portaLock = false;
        }
    }//GEN-LAST:event_tfPortaActionPerformed

    private void tfPortaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPortaKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_tfPortaKeyPressed

    private void tfPortaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPortaKeyReleased
        // TODO add your handling code here:
        if (portaLock){
            return;
        }
        try{
            portaLock = true;
            if (tfPorta.getText().equals("")){
                tfPorta.setText("0");
            }
            int novaPorta = Integer.parseInt(tfPorta.getText());
            portaValor = novaPorta;
        }catch(Exception e){
            tfPorta.setText(Integer.toString(portaValor));
        }finally{
            portaLock = false;
        }
    }//GEN-LAST:event_tfPortaKeyReleased

    private void iniciarConexaoServidor(){
        lbInfo.setText("Downloading...");
        if (usarTCP){
            ConexaoTCP conex = new ConexaoTCP();
            Thread t1 = new Thread(){
                boolean ocorreuErro = false;
                public void run(){
                    try{
                        conex.solicitarPedido(tfIP.getText(), portaValor, fileBuffer, threadInterruptFlag);
                    }catch(Exception e){
                        lbInfo.setText("Erro!");
                        e.printStackTrace();
                        ocorreuErro = true;
                    }finally{
                        threadControlLock = false;
                        if (!ocorreuErro){
                            lbInfo.setText("Download concluido!");
                        }
                    }
                }
            };
            threadControlLock = true;
            t1.start();
        }else{
            ConexaoUDP conex = new ConexaoUDP();
            Thread t1 = new Thread(){
                boolean ocorreuErro = false;
                public void run(){
                    try{
                        int resposta = conex.solicitarPedido(tfIP.getText(), fileBuffer, threadInterruptFlag);
                        if (resposta==0){//nao ocorreu erro
                            
                        }else if(resposta==-1){//timeout
                            lbInfo.setText("Timeout!");
                            ocorreuErro = true;
                        }else{
                            lbInfo.setText("Erro!");//outroerro
                            ocorreuErro = true;
                        }
                    }catch(Exception e){
                        e.printStackTrace();
                    }finally{
                        threadControlLock = false;
                        if (!ocorreuErro){
                            lbInfo.setText("Download concluido!");
                        }
                    }
                }
            };
            threadControlLock = true;
            t1.start();
        }
    }
    
    private void mudarEstadoDeInterface(){
        boolean decisor = tbBaixar.isSelected();
        if (decisor){
            tbBaixar.setText("Parar download");
            iniciarConexaoServidor();
        }else{
            tbBaixar.setText("Baixar Arquivo");
        }
        globalLock = decisor;
        btSelecionarArquivo.setEnabled(!decisor);
        tfIP.setEditable(!decisor);
        tfPorta.setEditable(!decisor);
    }
    
    private void tbBaixarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbBaixarActionPerformed
        // TODO add your handling code here:
        if (!(fileBuffer==null)){
            mudarEstadoDeInterface();
        }else{
            lbInfo.setText("Erro!, pasta nao selecionada!");
            tbBaixar.setSelected(false);
        }
    }//GEN-LAST:event_tbBaixarActionPerformed

    private void tfIPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfIPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfIPActionPerformed

    private void tfIPKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfIPKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfIPKeyPressed

    private void tfIPKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfIPKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tfIPKeyReleased

    private void tbTransporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbTransporteActionPerformed
        // TODO add your handling code here:
        usarTCP = !(tbTransporte.isSelected());
        if (usarTCP){
            tbTransporte.setText("TCP");
            tfPorta.setEditable(true);
            tfPorta.setBackground(Color.WHITE);
        }else{
            tbTransporte.setText("UDP");
            tfPorta.setEditable(false);
            tfPorta.setBackground(Color.BLACK);
        }
    }//GEN-LAST:event_tbTransporteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(clienteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(clienteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(clienteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(clienteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new clienteFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btSelecionarArquivo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lbArquivoNome;
    private javax.swing.JLabel lbInfo;
    private javax.swing.JPanel pConfig;
    private javax.swing.JToggleButton tbBaixar;
    private javax.swing.JToggleButton tbTransporte;
    private javax.swing.JTextField tfIP;
    private javax.swing.JTextField tfPorta;
    // End of variables declaration//GEN-END:variables
}
